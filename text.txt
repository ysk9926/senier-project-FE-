  return tag === "TODO" ? (
    // 투두 상태
    <div className=" relative w-full flex flex-col items-center">
      <div className=" flex flex-col justify-start items-center space-y-2 w-full h-[85%] overflow-auto scrollbar-none">
        {seeMyTodoList.map((todoItem, index) => {
          const colorIndex = index % todoBgCol.length;
          const backgroundColor = todoBgCol[colorIndex];

          return (
            todoItem.status === false && (
              <div
                className=" w-[80%] flex justify-between items-center py-1 rounded-md px-4"
                style={{ backgroundColor: `${backgroundColor}` }}
                key={index}
              >
                {/* content */}
                <div className=" py-1">{todoItem.content}</div>
                {/* button wrapper */}
                <div className=" flex justify-between items-center space-x-5 ">
                  {/* 완료하기 */}
                  <TodoStateBtn todoId={todoItem.id} />
                  {/* 삭제하기 */}
                  <TodoDeleteBtn todoId={todoItem.id} />
                </div>
              </div>
            )
          );
        })}
      </div>
      {/* 추가 버튼 */}
      {/* <div className=" w-36 px-1 min-[530px]:w-56 h-44 bg-[#DEF1FF] rounded-md m-5 flex justify-center">
        <form
          onSubmit={handleSubmit(onSubmitValid)}
          className=" flex flex-col items-center"
        >
          <textarea
            {...register("content", {
              required: "내용을 입력해주세요",
              minLength: { value: 2, message: "2글자 이상 입력하세요" },
            })}
            placeholder="투두를 추가해주세요"
            className=" w-full h-28 m-2 bg-inherit overflow-auto scrollbar-none resize-none outline-none 
            "
          />
          <button
            type="submit"
            className={` bg-white py-[2px] px-2 rounded-md mt-3 outline-none ${
              isValid ? "" : "pointer-events-none opacity-50"
            }`}
          >
            추가하기
          </button>
        </form>
      </div> */}
    </div>
  ) : (
    // 완료 상태
    <div className="flex flex-wrap justify-center">
      {seeMyTodoList.map((todoItem, index) => {
        const colorIndex = index % todoBgCol.length;
        const backgroundColor = todoBgCol[colorIndex];
        return (
          todoItem.status === true && (
            <div
              className=" w-36 min-[820px]:w-56 h-44 rounded-md m-5 px-2"
              style={{ backgroundColor: `${backgroundColor}` }}
              key={index}
            >
              {/* content */}
              <div className=" h-28 m-2 overflow-auto scrollbar-none">
                {todoItem.content}
              </div>
              {/* button wrapper */}
              <div className=" flex justify-center items-center space-x-10 mt-6">
                {/* 삭제하기 */}
                <TodoDeleteBtn todoId={todoItem.id} />
              </div>
            </div>
          )
        );
      })}
    </div>
  );
}